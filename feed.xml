<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://milo-oh-taek.github.io//</id><title>Hyeontaek Oh</title><subtitle>Web development, Javascript, React, Java HTML, CSS, Server</subtitle> <updated>2025-09-30T07:00:57+09:00</updated> <author> <name>Milo</name> <uri>https://milo-oh-taek.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://milo-oh-taek.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://milo-oh-taek.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2025 Milo </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>springboot dto groups - validation created일때만 적용하기</title><link href="https://milo-oh-taek.github.io//posts/springboot-dto-validation-groups/" rel="alternate" type="text/html" title="springboot dto groups - validation created일때만 적용하기" /><published>2025-09-26T07:47:00+09:00</published> <updated>2025-09-26T07:47:00+09:00</updated> <id>https://milo-oh-taek.github.io//posts/springboot-dto-validation-groups/</id> <content src="https://milo-oh-taek.github.io//posts/springboot-dto-validation-groups/" /> <author> <name>Milo</name> </author> <category term="SPRINGBOOT" /> <summary> DTO를 Create, Update 공용으로 사용할때, Create일때만 validation 적용하기 Interface file 생성 CreateValidationGroup이라는 빈 인터페이스를 만들어준다. com.demo.microservice ㄴ validators ㄴ CreateValidationGroup DTO groups 지정 해당 DTO Field Validation에 groups을 지정한다. @NotBlank(groups = CreateValidationGroup.class, message = "Registered date is required") private String registerDate; Controller에 적용 PUT에는 Default만 적용, P... </summary> </entry> <entry><title>springboot github action docker ec2 cicd</title><link href="https://milo-oh-taek.github.io//posts/springboot-ec2-ci-cd/" rel="alternate" type="text/html" title="springboot github action docker ec2 cicd" /><published>2025-09-23T04:40:00+09:00</published> <updated>2025-09-23T04:40:00+09:00</updated> <id>https://milo-oh-taek.github.io//posts/springboot-ec2-ci-cd/</id> <content src="https://milo-oh-taek.github.io//posts/springboot-ec2-ci-cd/" /> <author> <name>Milo</name> </author> <category term="CICD" /> <summary> Dockerfile FROM openjdk:23 WORKDIR /app COPY target/demo-*.jar app.jar EXPOSE 8080 ENTRYPOINT ["java", "-jar", "app.jar"] main.yml name: build test on: push: branches: - main jobs: build: runs-on: ubuntu-latest steps: - name: Checkout code uses: actions/checkout@v3 - name: Set up JDK uses: actions/setup-java@v3 with: ... </summary> </entry> <entry><title>kafka basic</title><link href="https://milo-oh-taek.github.io//posts/kafka-basic/" rel="alternate" type="text/html" title="kafka basic" /><published>2025-09-16T04:40:00+09:00</published> <updated>2025-09-16T04:40:00+09:00</updated> <id>https://milo-oh-taek.github.io//posts/kafka-basic/</id> <content src="https://milo-oh-taek.github.io//posts/kafka-basic/" /> <author> <name>Milo</name> </author> <category term="KAFKA" /> <summary> Kafka - Event-Driven Architectures High Throughput Fault Tolerance Scalability Real-Time Processing Topic Where all similar events related to a service can be stored. Message Categorization Immutable Log Multi-Consumer Access Decoupled Communication Replication Broker Message Management: Storing, retrieving, distributing messages Cluster Node: Each broker is a n... </summary> </entry> <entry><title>react gitlab aws s3 ci/cd</title><link href="https://milo-oh-taek.github.io//posts/gitlab-aws-s3-ci-cd/" rel="alternate" type="text/html" title="react gitlab aws s3 ci/cd" /><published>2025-09-13T04:40:00+09:00</published> <updated>2025-09-13T04:40:00+09:00</updated> <id>https://milo-oh-taek.github.io//posts/gitlab-aws-s3-ci-cd/</id> <content src="https://milo-oh-taek.github.io//posts/gitlab-aws-s3-ci-cd/" /> <author> <name>Milo</name> </author> <category term="CICD" /> <summary> Create a S3 bucket 권한 모든 퍼블릭 액세스 차단 Disable 버킷 정책 { "Version": "2012-10-17", "Statement": [ { "Sid": "Statement1", "Effect": "Allow", "Principal": "*", "Action": "s3:GetObject", "Resource": "arn:aws:s3:::ohtvitebucket/*" } ] } Resource: arn + “/*” Create IAM User AmazonS3FullAccess Gitl... </summary> </entry> <entry><title>ownership of rust(1)</title><link href="https://milo-oh-taek.github.io//posts/ownership-of-rust(1)/" rel="alternate" type="text/html" title="ownership of rust(1)" /><published>2023-01-03T12:40:00+09:00</published> <updated>2023-01-03T12:40:00+09:00</updated> <id>https://milo-oh-taek.github.io//posts/ownership-of-rust(1)/</id> <content src="https://milo-oh-taek.github.io//posts/ownership-of-rust(1)/" /> <author> <name>Milo</name> </author> <category term="RUST" /> <summary> Ownership Ownership이란 Rust만의 유니크한 특성이며, gc없이도 안전하게 메모리를 사용하게 해주는 개념이다. What is Ownership? Ownership은 Rust가 어떻게 memory를 관리할 지 통제하는 규칙들의 set이다. 어떤 언어들은 garbage collection이 주기적으로 더이상 사용하지 않는 메모리들을 관리해주고(Java, JS, Python, GO) 어떤 언어들은 프로그래머가 직접 할당과 해제를 하여 메모리를 관리해야 한다.(C, C++) Rust는 그 외의 방식: compiler가 체크하는 규칙들의 set인 ownership 시스템에 의해 관리된다. 규칙이 위배된다면, compile되지 않는다! The Stack and the ... </summary> </entry> </feed>
